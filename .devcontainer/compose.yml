services:
  app:
    build:
      context: .
      dockerfile: Dockerfile

    volumes:
      - ../:/workspace:cached
      - node_modules:/workspace/node_modules

    command: sleep infinity

    networks:
      - internal_network
      - external_network

  redis:
    restart: unless-stopped
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    command: ['--default_lua_flags=allow-undeclared-keys','--lock_on_hashtags']
    networks:
      - internal_network
    ulimits:
      memlock: -1
    volumes:
      - redis-data:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  db:
    restart: unless-stopped
    image: postgres:17-alpine
    networks:
      - internal_network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: misskey
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

  elasticsearch:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.elastic
    networks:
      - internal_network
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"'"
      interval: 30s
      retries: 20

  kibana:
    restart: unless-stopped
    image: docker.elastic.co/kibana/kibana:8.15.2
    networks:
      - internal_network
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    healthcheck:
      test: "curl -s http://localhost:5601/api/status | grep -q '\"status\":\"green\"'"
      interval: 30s
      retries: 20

volumes:
  postgres-data:
  redis-data:
  node_modules:

networks:
  internal_network:
    internal: true
  external_network:
